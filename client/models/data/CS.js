{"103":{"department":"CS","number":"103","title":"Mathematical Foundations of Computing","description":"Mathematical foundations required for computer science, including propositional predicate logic, induction, sets, functions, and relations. Formal language theory, including regular expressions, grammars, finite automata, Turing machines, and NP-completeness. Mathematical rigor, proof techniques, and applications. Prerequisite: 106A or equivalent.","min_units":3,"max_units":5,"gers":["WAY-FR", "GER:DB-Math"],"id":208532,"primary":[[{"primary-instructors":[],"secondary-instructors":["Schwarz, K."],"meeting-times":[{"days":[true,false,true,false,true],"start":"3:00:00 PM","end":"4:20:00 PM","instructors":["Schwarz, K."],"location":"Hewlett Teaching Center 200"}],"id":16113}],[{"primary-instructors":[],"secondary-instructors":[],"meeting-times":[{"days":[true,false,false,false,false],"start":"9:00:00 AM","end":"9:50:00 AM","instructors":[],"location":""}],"id":0}],[]],"primary_type":"Lecture"},
"105":{"department":"CS","number":"105","title":"Introduction to Computers","description":"For non-technical majors. What computers are and how they work. Practical experience in programming. Construction of computer programs and basic design techniques. A survey of Internet technology and the basics of computer hardware. Students in technical fields and students looking to acquire programming skills should take 106A or 106X. Students with prior computer science experience at the level of 106 or above require consent of instructor. Prerequisite: minimal math skills.","min_units":3,"max_units":5,"gers":["WAY-FR", "GER:DB-EngrAppSci"],"id":105641,"primary":[[{"primary-instructors":[],"secondary-instructors":["Young, P."],"meeting-times":[{"days":[true,false,true,false,true],"start":"1:30:00 PM","end":"2:20:00 PM","instructors":["Young, P."],"location":"420-041"}],"id":16293}],[{"primary-instructors":[],"secondary-instructors":[],"meeting-times":[{"days":[true,false,false,false,false],"start":"9:00:00 AM","end":"9:50:00 AM","instructors":[],"location":""}],"id":0}],[]],"primary_type":"Lecture"},
"106A":{"department":"CS","number":"106A","title":"Programming Methodology (ENGR 70A)","description":"Introduction to the engineering of computer applications emphasizing modern software engineering principles: object-oriented design, decomposition, encapsulation, abstraction, and testing. Uses the Java programming language. Emphasis is on good programming style and the built-in facilities of the Java language. No prior programming experience required. Summer quarter enrollment is limited. Priority given to Stanford students.","min_units":3,"max_units":5,"gers":["WAY-FR", "GER:DB-EngrAppSci"],"id":105644,"primary":[[{"primary-instructors":[],"secondary-instructors":["Sahami, M."],"meeting-times":[{"days":[true,false,true,false,true],"start":"1:30:00 PM","end":"2:20:00 PM","instructors":["Sahami, M."],"location":"Hewlett Teaching Center 200"}],"id":3281}],[{"primary-instructors":[],"secondary-instructors":[],"meeting-times":[{"days":[true,false,false,false,false],"start":"9:00:00 AM","end":"9:50:00 AM","instructors":[],"location":""}],"id":0}],[{"primary-instructors":[],"secondary-instructors":[],"meeting-times":[{"days":[true,false,false,false,false],"start":"9:00:00 AM","end":"9:50:00 AM","instructors":[],"location":""}],"id":0}]],"primary_type":"Lecture"},
"106B":{"department":"CS","number":"106B","title":"Programming Abstractions (ENGR 70B)","description":"Abstraction and its relation to programming. Software engineering principles of data abstraction and modularity. Object-oriented programming, fundamental data structures (such as stacks, queues, sets) and data-directed design. Recursion and recursive data structures (linked lists, trees, graphs). Introduction to time and space complexity analysis. Uses the programming language C++ covering its basic facilities. Prerequisite: 106A or equivalent. Summer quarter enrollment is limited. Priority given to Stanford students.","min_units":3,"max_units":5,"gers":["WAY-FR", "GER:DB-EngrAppSci"],"id":105645,"primary":[[{"primary-instructors":[],"secondary-instructors":["Stepp, M."],"meeting-times":[{"days":[true,false,true,false,true],"start":"12:30:00 PM","end":"1:20:00 PM","instructors":["Stepp, M."],"location":"Hewlett Teaching Center 200"}],"id":7311}],[{"primary-instructors":[],"secondary-instructors":[],"meeting-times":[{"days":[true,false,false,false,false],"start":"9:00:00 AM","end":"9:50:00 AM","instructors":[],"location":""}],"id":0}],[{"primary-instructors":[],"secondary-instructors":[],"meeting-times":[{"days":[true,false,false,false,false],"start":"9:00:00 AM","end":"9:50:00 AM","instructors":[],"location":""}],"id":0}]],"primary_type":"Lecture"},
"106X":{"department":"CS","number":"106X","title":"Programming Abstractions (Accelerated) (ENGR 70X)","description":"Intensive version of 106B for students with a strong programming background interested in a rigorous treatment of the topics at an accelerated pace. Additional advanced material and more challenging projects. Prerequisite: excellence in 106A or equivalent, or consent of instructor.","min_units":3,"max_units":5,"gers":["WAY-FR", "GER:DB-EngrAppSci"],"id":105648,"primary":[[{"primary-instructors":[],"secondary-instructors":[],"meeting-times":[{"days":[true,false,true,false,true],"start":"11:30:00 AM","end":"12:20:00 PM","instructors":[],"location":"Gates B1"}],"id":15370}],[{"primary-instructors":[],"secondary-instructors":[],"meeting-times":[{"days":[true,false,false,false,false],"start":"9:00:00 AM","end":"9:50:00 AM","instructors":[],"location":""}],"id":0}],[]],"primary_type":"Lecture"},
"107":{"department":"CS","number":"107","title":"Computer Organization and Systems","description":"Introduction to the fundamental concepts of computer systems. Explores how computer systems execute programs and manipulate data, working from the C programming language down to the microprocessor. Topics covered include: the C programming language, data representation, machine-level code, computer arithmetic, elements of code compilation, memory organization and management, and performance evaluation and optimization. Prerequisites: 106B or X, or consent of instructor.","min_units":3,"max_units":5,"gers":["WAY-FR", "GER:DB-EngrAppSci"],"id":105649,"primary":[[{"primary-instructors":[],"secondary-instructors":["Zelenski, J."],"meeting-times":[{"days":[true,false,false,false,true],"start":"1:30:00 PM","end":"2:50:00 PM","instructors":["Zelenski, J."],"location":"200-002"}],"id":16296}],[{"primary-instructors":[],"secondary-instructors":[],"meeting-times":[{"days":[true,false,false,false,false],"start":"9:00:00 AM","end":"9:50:00 AM","instructors":[],"location":""}],"id":0}],[{"primary-instructors":[],"secondary-instructors":[],"meeting-times":[{"days":[true,false,false,false,false],"start":"9:00:00 AM","end":"9:50:00 AM","instructors":[],"location":""}],"id":0}]],"primary_type":"Lecture"},
"108":{"department":"CS","number":"108","title":"Object-Oriented Systems Design","description":"Software design and construction in the context of large OOP libraries. Taught in Java. Topics: OOP design, design patterns, testing, graphical user interface (GUI) OOP libraries, software engineering strategies, approaches to programming in teams. Prerequisite: 107.","min_units":3,"max_units":4,"gers":["GER:DB-EngrAppSci"],"id":105650,"primary":[[{"primary-instructors":[],"secondary-instructors":["Young, P."],"meeting-times":[{"days":[true,false,true,false,false],"start":"3:00:00 PM","end":"4:20:00 PM","instructors":["Young, P."],"location":"370-370"}],"id":16298}],[{"primary-instructors":[],"secondary-instructors":[],"meeting-times":[{"days":[true,false,false,false,false],"start":"9:00:00 AM","end":"9:50:00 AM","instructors":[],"location":""}],"id":0}],[]],"primary_type":"Lecture"},
"110":{"department":"CS","number":"110","title":"Principles of Computer Systems","description":"Principles and practice of engineering of computer software and hardware systems. Topics include: techniques for controlling complexity; strong modularity using client-server design, virtual memory, and threads; networks; atomicity and coordination of parallel activities; security, and encryption; and performance optimizations. Prerequisite: 107.","min_units":3,"max_units":5,"gers":["GER:DB-EngrAppSci"],"id":208541,"primary":[[{"primary-instructors":[],"secondary-instructors":["Cain, J."],"meeting-times":[{"days":[true,false,true,false,true],"start":"1:30:00 PM","end":"2:20:00 PM","instructors":["Cain, J."],"location":"320-105"}],"id":16114}],[{"primary-instructors":[],"secondary-instructors":[],"meeting-times":[{"days":[true,false,false,false,false],"start":"9:00:00 AM","end":"9:50:00 AM","instructors":[],"location":""}],"id":0}],[{"primary-instructors":[],"secondary-instructors":[],"meeting-times":[{"days":[true,false,false,false,false],"start":"9:00:00 AM","end":"9:50:00 AM","instructors":[],"location":""}],"id":0}]],"primary_type":"Lecture"},
"123":{"department":"CS","number":"123","title":"Programming Your Personal Robot","description":"An introduction to the programming of a sensor-rich personal robot. This course extends programming from the virtual environment into the physical world, which presents unique challenges. Focus is on three areas of intellectual discourse that are fundamental to the programming of physical devices: communication with the devices; programming of event driven behaviors; and reasoning with uncertainty. The concepts introduced will be put into practical use through a series of class projects centered around programming your personal robot. This course also serves as a good introduction to Experimental Robotics by exposing students to basic concepts and techniques that are relevant for real world robot programming. Prerequisite: Basic knowledge of computer programming (as covered in CS 106). Knowledge of Python is recommended.","min_units":3,"max_units":3,"gers":[],"id":217265,"primary":[[{"primary-instructors":[],"secondary-instructors":[],"meeting-times":[{"days":[false,true,false,true,false],"start":"10:30:00 AM","end":"11:50:00 AM","instructors":[],"location":""}],"id":29046}],[],[]],"primary_type":"Lecture"},
"131":{"department":"CS","number":"131","title":"Computer Vision: Foundations and Applications","description":"Robots that can navigate space and perform duties, search engines that can index billions of images and videos, algorithms that can diagnose medical images for diseases, or smart cars that can see and drive safely: Lying in the heart of these modern AI applications are computer vision technologies that can perceive, understand and reconstruct the complex visual world. This course is designed for students who are interested in learning about the fundamental principles and important applications of computer vision. Course will introduce a number of fundamental concepts in computer vision and expose students to a number of real-world applications, plus guide students through a series of well designed projects such that they will get to implement cutting-edge computer vision algorithms. Prerequisites: Students should be familiar with Matlab (i.e. have programmed in Matlab before) and Linux; plus Calculus & Linear Algebra.","min_units":3,"max_units":4,"gers":[],"id":214905,"primary":[[{"primary-instructors":[],"secondary-instructors":["Li, F."],"meeting-times":[{"days":[true,false,true,false,false],"start":"1:30:00 PM","end":"2:50:00 PM","instructors":["Li, F."],"location":""}],"id":16459}],[],[]],"primary_type":"Lecture"},
"140":{"department":"CS","number":"140","title":"Operating Systems and Systems Programming","description":"Operating systems design and implementation. Basic structure; synchronization and communication mechanisms; implementation of processes, process management, scheduling, and protection; memory organization and management, including virtual memory; I/O device management, secondary storage, and file systems. Prerequisite: CS 110.","min_units":3,"max_units":4,"gers":["GER:DB-EngrAppSci"],"id":105670,"primary":[[{"primary-instructors":[],"secondary-instructors":[],"meeting-times":[{"days":[true,false,true,false,false],"start":"3:00:00 PM","end":"4:20:00 PM","instructors":[],"location":"Skillaud"}],"id":27712}],[{"primary-instructors":[],"secondary-instructors":[],"meeting-times":[{"days":[true,false,false,false,false],"start":"9:00:00 AM","end":"9:50:00 AM","instructors":[],"location":""}],"id":0}],[]],"primary_type":"Lecture"},
"144":{"department":"CS","number":"144","title":"Introduction to Computer Networking","description":"Principles and practice. Structure and components of computer networks, packet switching, layered architectures. Applications: web/http, voice-over-IP, p2p file sharing and socket programming. Reliable transport: TCP/IP, reliable transfer, flow control, and congestion control. The network layer: names and addresses, routing. Local area networks: ethernet and switches. Wireless networks and network security. Prerequisite: CS 110.","min_units":3,"max_units":4,"gers":["GER:DB-EngrAppSci"],"id":207524,"primary":[[{"primary-instructors":[],"secondary-instructors":["McKeown, N."],"meeting-times":[{"days":[false,true,false,true,false],"start":"3:00:00 PM","end":"4:20:00 PM","instructors":["Levis, P.","McKeown, N."],"location":"Braunaud"}],"id":29047}],[],[]],"primary_type":"Lecture"},
"145":{"department":"CS","number":"145","title":"Introduction to Databases","description":"The course covers database design and the use of database management systems for applications. It includes extensive coverage of the relational model, relational algebra, and SQL.The course includes database design and relational design principles based on dependencies and normal forms. Many additional key database topics from the design and application-building perspective are also covered: indexes, views, transactions, authorization, integrity constraints, triggers, on-line analytical processing (OLAP), JSON, and emerging NoSQL systems. Class time will include guest speakers from industry and additional advanced topics as time and class interest permits. Prerequisites: 103 and 107 (or equivalent).","min_units":3,"max_units":4,"gers":["GER:DB-EngrAppSci"],"id":105675,"primary":[[{"primary-instructors":[],"secondary-instructors":["Re, C."],"meeting-times":[{"days":[false,true,false,true,false],"start":"3:00:00 PM","end":"4:20:00 PM","instructors":["Re, C."],"location":"NVIDIA Auditorium"}],"id":16301}],[],[]],"primary_type":"Lecture"},
"147":{"department":"CS","number":"147","title":"Introduction to Human-Computer Interaction Design","description":"Introduces fundamental methods and principles for designing, implementing, and evaluating user interfaces. Topics: user-centered design, rapid prototyping, experimentation, direct manipulation, cognitive principles, visual design, social software, software tools. Learn by doing: work with a team on a quarter-long design project, supported by lectures, readings, and studios. Prerequisite: 106B or X or equivalent programming experience.","min_units":3,"max_units":5,"gers":[],"id":105676,"primary":[[{"primary-instructors":[],"secondary-instructors":["Landay, J."],"meeting-times":[{"days":[false,true,false,true,false],"start":"11:30:00 AM","end":"1:20:00 PM","instructors":["Landay, J."],"location":"Bishop Auditorium"}],"id":16303}],[],[]],"primary_type":"Lecture"},
"148":{"department":"CS","number":"148","title":"Introduction to Computer Graphics and Imaging","description":"Introductory prerequisite course in the computer graphics sequence introducing students to the technical concepts behind creating synthetic computer generated images. Focuses on using OpenGL to create visual imagery, as well as an understanding of the underlying mathematical concepts including triangles, normals, interpolation, texture mapping, bump mapping, etc. Course will cover fundamental understanding of light and color, as well as how it impacts computer displays and printers. Class will discuss more thoroughly how light interacts with the environment, constructing engineering models such as the BRDF, plus various simplifications into more basic lighting and shading models. Also covers ray tracing technology for creating virtual images, while drawing parallels between ray tracers and real world cameras to illustrate various concepts. Anti-aliasing and acceleration structures are also discussed. The final class mini-project consists of building out a ray tracer to create visually compelling images. Starter codes and code bits will be provided to aid in development, but this class focuses on what you can do with the code as opposed to what the code itself looks like. Therefore grading is weighted toward in person \"demos\" of the code in action - creativity and the production of impressive visual imagery are highly encouraged. Prerequisites: CS 107, MATH 51.","min_units":3,"max_units":4,"gers":["WAY-CE", "GER:DB-EngrAppSci"],"id":105678,"primary":[[{"primary-instructors":[],"secondary-instructors":[],"meeting-times":[{"days":[false,true,false,true,false],"start":"10:30:00 AM","end":"11:50:00 AM","instructors":[],"location":"Gates B3"}],"id":7313}],[],[]],"primary_type":"Lecture"},
"157":{"department":"CS","number":"157","title":"Logic and Automated Reasoning","description":"An elementary exposition from a computational point of view of propositional and predicate logic, axiomatic theories, and theories with equality and induction. Interpretations, models, validity, proof, strategies, and applications. Automated deduction: polarity, skolemization, unification, resolution, equality. Prerequisite: 103 or 103B.","min_units":3,"max_units":3,"gers":["GER:DB-EngrAppSci"],"id":105684,"primary":[[{"primary-instructors":[],"secondary-instructors":["Genesereth, M."],"meeting-times":[{"days":[false,true,false,true,false],"start":"12:00:00 PM","end":"1:20:00 PM","instructors":["Genesereth, M."],"location":"Gates B1"}],"id":15432}],[],[]],"primary_type":"Lecture"},
"181":{"department":"CS","number":"181","title":"Computers, Ethics, and Public Policy","description":"(Formerly 201.) Primarily for majors entering computer-related fields. Ethical and social issues related to the development and use of computer technology. Ethical theory, and social, political, and legal considerations. Scenarios in problem areas: privacy, reliability and risks of complex systems, and responsibility of professionals for applications and consequences of their work. Prerequisite: 106B or X.","min_units":4,"max_units":4,"gers":["WAY-ER", "GER:EC-EthicReas"],"id":105586,"primary":[[{"primary-instructors":[],"secondary-instructors":["Lin, H."],"meeting-times":[{"days":[true,false,true,false,false],"start":"1:30:00 PM","end":"2:50:00 PM","instructors":["Lin, H."],"location":"370-370"}],"id":15365}],[{"primary-instructors":[],"secondary-instructors":[],"meeting-times":[{"days":[true,false,false,false,false],"start":"9:00:00 AM","end":"9:50:00 AM","instructors":[],"location":""}],"id":0}],[{"primary-instructors":[],"secondary-instructors":[],"meeting-times":[{"days":[true,false,false,false,false],"start":"9:00:00 AM","end":"9:50:00 AM","instructors":[],"location":""}],"id":0}]],"primary_type":"Lecture"},
"181W":{"department":"CS","number":"181W","title":"Computers, Ethics, and Public Policy (WIM)","description":"Writing-intensive version of CS181. Satisfies the WIM requirement for Computer Science and Computer Systems Engineering undergraduates.","min_units":4,"max_units":4,"gers":["WAY-ER", "GER:EC-EthicReas"],"id":211161,"primary":[[{"primary-instructors":[],"secondary-instructors":["Lin, H."],"meeting-times":[{"days":[true,false,true,false,false],"start":"1:30:00 PM","end":"2:50:00 PM","instructors":["Lin, H."],"location":""}],"id":16302}],[{"primary-instructors":[],"secondary-instructors":[],"meeting-times":[{"days":[true,false,false,false,false],"start":"9:00:00 AM","end":"9:50:00 AM","instructors":[],"location":""}],"id":0}],[{"primary-instructors":[],"secondary-instructors":[],"meeting-times":[{"days":[true,false,false,false,false],"start":"9:00:00 AM","end":"9:50:00 AM","instructors":[],"location":""}],"id":0}]],"primary_type":"Lecture"},
"183C":{"department":"CS","number":"183C","title":"Technology-enabled Blitzscaling","description":"We are all familiar with the power of technological innovation to reshape markets and daily lives. But what many overlook is how technology enables a far more rapid scaling of organizations and businesses. This rapid scaling, or 'blitzscaling', confers massive competitive advantage, but requires massive adjustments at every stage of growth. 'Technology-enabled Blitzscaling' examines how technology enables this hyper growth and how technology can help entrepreneurs and organizations manage that growth.","min_units":2,"max_units":2,"gers":[],"id":217261,"primary":[[{"primary-instructors":[],"secondary-instructors":[],"meeting-times":[{"days":[false,true,false,true,false],"start":"4:30:00 PM","end":"5:50:00 PM","instructors":[],"location":"Gates B3"}],"id":29049}],[],[]],"primary_type":"Lecture"},
"193P":{"department":"CS","number":"193P","title":"iPhone and iPad Application Programming","description":"Tools and APIs required to build applications for the iPhone and iPad platforms using the iOS SDK. User interface design for mobile devices and unique user interactions using multi-touch technologies. Object-oriented design using model-view-controller paradigm, memory management, Swift programming language. Other topics include: object-oriented database API, animation, mobile device power management, multi-threading, networking and performance considerations. Prerequisites: C language and object-oriented programming experience exceeding 106B or X level. Previous completion of any one of the following is required: CS 107, 108 (preferred) or 110. Recommended: UNIX, graphics, databases.","min_units":3,"max_units":3,"gers":[],"id":208582,"primary":[[{"primary-instructors":[],"secondary-instructors":["Hegarty, P."],"meeting-times":[{"days":[true,false,true,false,false],"start":"4:30:00 PM","end":"5:50:00 PM","instructors":["Hegarty, P."],"location":"370-370"}],"id":28442}],[],[{"primary-instructors":[],"secondary-instructors":[],"meeting-times":[{"days":[true,false,false,false,false],"start":"9:00:00 AM","end":"9:50:00 AM","instructors":[],"location":""}],"id":0}]],"primary_type":"Lecture"},
"198":{"department":"CS","number":"198","title":"Teaching Computer Science","description":"Students lead a discussion section of 106A while learning how to teach a programming language at the introductory level. Focus is on teaching skills, techniques, and course specifics. Application and interview required; see http://cs198.stanford.edu.","min_units":3,"max_units":4,"gers":[],"id":105715,"primary":[[{"primary-instructors":[],"secondary-instructors":["Sahami, M."],"meeting-times":[{"days":[true,false,false,false,false],"start":"4:30:00 PM","end":"6:20:00 PM","instructors":["Sahami, M."],"location":"420-040"}],"id":16305}],[{"primary-instructors":[],"secondary-instructors":[],"meeting-times":[{"days":[true,false,false,false,false],"start":"9:00:00 AM","end":"9:50:00 AM","instructors":[],"location":""}],"id":0}],[{"primary-instructors":[],"secondary-instructors":[],"meeting-times":[{"days":[true,false,false,false,false],"start":"9:00:00 AM","end":"9:50:00 AM","instructors":[],"location":""}],"id":0}]],"primary_type":"Lecture"},
"221":{"department":"CS","number":"221","title":"Artificial Intelligence: Principles and Techniques","description":"Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling.  This course focuses on the foundational concepts that drive these applications.  In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms).  Specific topics include search, constraint satisfaction, game playing, Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 107, and CS 109 (algorithms, probability, and programming experience).","min_units":3,"max_units":4,"gers":[],"id":105730,"primary":[[{"primary-instructors":[],"secondary-instructors":[],"meeting-times":[{"days":[true,false,true,false,false],"start":"3:00:00 PM","end":"4:20:00 PM","instructors":[],"location":"NVIDIA Auditorium"}],"id":16306}],[],[]],"primary_type":"Lecture"},
"224N":{"department":"CS","number":"224N","title":"Natural Language Processing (LINGUIST 284)","description":"Methods for processing human language information and the underlying computational properties of natural languages. Syntactic and semantic processing from linguistic and algorithmic perspectives. Focus is on modern quantitative techniques in NLP: using large corpora, statistical models for acquisition, translation, and interpretation; and representative systems. Prerequisites: CS124 or CS121/221.","min_units":3,"max_units":4,"gers":[],"id":120904,"primary":[[{"primary-instructors":[],"secondary-instructors":["Manning, C."],"meeting-times":[{"days":[false,true,false,true,false],"start":"10:30:00 AM","end":"11:50:00 AM","instructors":["Manning, C."],"location":"Hewlett Teaching Center 201"}],"id":15647}],[],[]],"primary_type":"Lecture"},
"224W":{"department":"CS","number":"224W","title":"Social Information and Network Analysis","description":"(Formerly 322) How do diseases spread? Who are the influencers? How can we predict friends and enemies in a social network? How information flows and mutates as it is passed through networks? Behind each of these questions there is an intricate wiring diagram, a network, that defines the interactions between the components. And we will never understand these questions unless we understand the networks behind them. The course will cover recent research on the structure and analysis of such large social and information networks and on models and algorithms that abstract their basic properties. Class will explore how to practically analyze large-scale network data and how to reason about it through models for network structure and evolution. Topics include methods for link analysis and network community detection, diffusion and information propagation on the web, virus outbreak detection in networks, and connections with work in the social sciences and economics.","min_units":3,"max_units":4,"gers":[],"id":105824,"primary":[[{"primary-instructors":[],"secondary-instructors":[],"meeting-times":[{"days":[false,true,false,true,false],"start":"9:00:00 AM","end":"10:20:00 AM","instructors":[],"location":"NVIDIA Auditorium"}],"id":16317}],[],[]],"primary_type":"Lecture"},
"229":{"department":"CS","number":"229","title":"Machine Learning (STATS 229)","description":"Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, model/feature selection, learning theory, VC dimension, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: linear algebra, and basic probability and statistics.","min_units":3,"max_units":4,"gers":[],"id":105750,"primary":[[{"primary-instructors":[],"secondary-instructors":["Ng, A."],"meeting-times":[{"days":[true,false,true,false,false],"start":"9:30:00 AM","end":"10:50:00 AM","instructors":["Ng, A."],"location":"NVIDIA Auditorium"}],"id":16308}],[],[{"primary-instructors":[],"secondary-instructors":[],"meeting-times":[{"days":[true,false,false,false,false],"start":"9:00:00 AM","end":"9:50:00 AM","instructors":[],"location":""}],"id":0}]],"primary_type":"Lecture"},
"232":{"department":"CS","number":"232","title":"Digital Image Processing (EE 368)","description":"Image sampling and quantization color, point operations, segmentation, morphological image processing, linear image filtering and correlation, image transforms, eigenimages, multiresolution image processing, noise reduction and restoration, feature extraction and recognition tasks, image registration. Emphasis is on the general principles of image processing. Students learn to apply material by implementing and investigating image processing algorithms in Matlab and optionally on Android mobile devices. Term project. Recommended: EE261, EE278.","min_units":3,"max_units":3,"gers":[],"id":140036,"primary":[[{"primary-instructors":[],"secondary-instructors":[],"meeting-times":[{"days":[true,false,true,false,true],"start":"1:30:00 PM","end":"2:50:00 PM","instructors":[],"location":"Gates B3"}],"id":17474}],[],[{"primary-instructors":[],"secondary-instructors":[],"meeting-times":[{"days":[true,false,false,false,false],"start":"9:00:00 AM","end":"9:50:00 AM","instructors":[],"location":""}],"id":0}]],"primary_type":"Lecture"},
"238":{"department":"CS","number":"238","title":"Decision Making under Uncertainty (AA 228)","description":"This course is designed to increase awareness and appreciation for why uncertainty matters, particularly for aerospace applications. Introduces decision making under uncertainty from a computational perspective and provides an overview of the necessary tools for building autonomous and decision-support systems. Following an introduction to probabilistic models and decision theory, the course will cover computational methods for solving decision problems with stochastic dynamics, model uncertainty, and imperfect state information. Topics include: Bayesian networks, influence diagrams, dynamic programming, reinforcement learning, and partially observable Markov decision processes. Applications cover: air traffic control, aviation surveillance systems, autonomous vehicles, and robotic planetary exploration. Prerequisites: basic probability and fluency in a high-level programming language.","min_units":3,"max_units":4,"gers":[],"id":215840,"primary":[[{"primary-instructors":[],"secondary-instructors":["Kochenderfer, M."],"meeting-times":[{"days":[true,false,true,false,false],"start":"1:30:00 PM","end":"2:50:00 PM","instructors":["Kochenderfer, M."],"location":""}],"id":15798}],[],[]],"primary_type":"Lecture"},
"241":{"department":"CS","number":"241","title":"Embedded Systems Workshop","description":"Project-centric building hardware and software for embedded computing systems. Students work on an existing project of their own or join one of these projects. Syllabus topics will be determined by the needs of the enrolled students and projects. Examples of topics include: interrupts and concurrent programming, deterministic timing and synchronization, state-based programming models, filters, frequency response, and high-frequency signals, low power operation, system and PCB design, security, and networked communication. Prerequisite: CS107 (or equivalent).","min_units":3,"max_units":3,"gers":[],"id":217279,"primary":[[{"primary-instructors":[],"secondary-instructors":["Levis, P."],"meeting-times":[{"days":[true,false,true,false,false],"start":"10:30:00 AM","end":"12:20:00 PM","instructors":["Levis, P."],"location":"380-380F"}],"id":29048}],[],[]],"primary_type":"Lecture"},
"242":{"department":"CS","number":"242","title":"Programming Languages","description":"Central concepts in modern programming languages, impact on software development, language design trade-offs, and implementation considerations. Functional, imperative, and object-oriented paradigms. Formal semantic methods and program analysis. Modern type systems, higher order functions and closures, exceptions and continuations. Modularity, object-oriented languages, and concurrency. Runtime support for language features, interoperability, and security issues. Prerequisite: 107, or experience with Lisp, C, and an object-oriented language.","min_units":3,"max_units":3,"gers":[],"id":105761,"primary":[[{"primary-instructors":[],"secondary-instructors":[],"meeting-times":[{"days":[true,false,true,false,false],"start":"4:30:00 PM","end":"5:50:00 PM","instructors":[],"location":"Skillaud"}],"id":16311}],[],[]],"primary_type":"Lecture"},
"247":{"department":"CS","number":"247","title":"Human-Computer Interaction Design Studio","description":"Project-based focus on interaction design process, especially early-stage design and rapid prototyping. Methods used in interaction design including needs analysis, user observation, sketching, concept generation, scenario building, and evaluation. Prerequisites: 147 or equivalent background in design thinking; 106B or equivalent background in programming. Recommended: CS 142 or equivalent background in web programming","min_units":3,"max_units":4,"gers":[],"id":105772,"primary":[[{"primary-instructors":[],"secondary-instructors":["Bernstein, M."],"meeting-times":[{"days":[true,false,true,false,false],"start":"1:30:00 PM","end":"3:20:00 PM","instructors":["Bernstein, M."],"location":"Lathrop 299"}],"id":27714}],[{"primary-instructors":[],"secondary-instructors":[],"meeting-times":[{"days":[true,false,false,false,false],"start":"9:00:00 AM","end":"9:50:00 AM","instructors":[],"location":""}],"id":0}],[]],"primary_type":"Lecture"},
"249A":{"department":"CS","number":"249A","title":"Object-Oriented Programming from a Modeling and Simulation Perspective","description":"Topics: large-scale software development approaches for complex applications, class libraries and frameworks; encapsulation, use of inheritance and dynamic dispatch, design of interfaces and interface/implementation separation, exception handling, smart pointers and reference management, minimalizing dependencies and value-oriented programming. Inheritance: when and why multiple inheritance naming, directories, manager, and disciplined use of design patterns including functors, event notification and iterators. Prerequisites: C, C++, and programming methodology as developed in 106B or X, and 107 (107 may be taken concurrently). Recommended: 193D.","min_units":3,"max_units":3,"gers":[],"id":105777,"primary":[[{"primary-instructors":[],"secondary-instructors":[],"meeting-times":[{"days":[false,true,false,true,false],"start":"3:00:00 PM","end":"4:20:00 PM","instructors":[],"location":"Gates B3"}],"id":16315}],[],[]],"primary_type":"Lecture"},
"251":{"department":"CS","number":"251","title":"Bitcoin and Crypto Currencies","description":"For advanced undergraduates and for graduate students.  The potential applications for Bitcoin-like technologies is enormous.  The course will cover the technical aspects of crypto-currencies, blockchain technologies, and distributed consensus. Students will learn how these systems work and how to engineer secure software that interacts with the Bitcoin network and other crypto currencies. Prerequisite: CS110. Recommended: CS255.","min_units":3,"max_units":3,"gers":[],"id":217137,"primary":[[{"primary-instructors":[],"secondary-instructors":[],"meeting-times":[{"days":[true,false,true,false,false],"start":"3:00:00 PM","end":"4:20:00 PM","instructors":[],"location":"Gates B3"}],"id":28836}],[],[]],"primary_type":"Lecture"},
"265":{"department":"CS","number":"265","title":"Randomized Algorithms and Probabilistic Analysis (CME 309)","description":"Randomness pervades the natural processes around us, from the formation of networks, to genetic recombination, to quantum physics. Randomness is also a powerful tool that can be leveraged to create algorithms and data structures which, in many cases, are more efficient and simpler than their deterministic counterparts. This course covers the key tools of probabilistic analysis, and application of these tools to understand the behaviors of random processes and algorithms. Emphasis is on theoretical foundations, though we will apply this theory broadly, discussing applications in machine learning and data analysis, networking, and systems. Topics include tail bounds, the probabilistic method, Markov chains, and martingales, with applications to analyzing random graphs, metric embeddings, random walks, and a host of powerful and elegant randomized algorithms. Prerequisites: CS 161 and STAT 116, or equivalents and instructor consent.","min_units":3,"max_units":3,"gers":[],"id":214563,"primary":[[{"primary-instructors":[],"secondary-instructors":["Valiant, G."],"meeting-times":[{"days":[false,true,false,true,false],"start":"10:30:00 AM","end":"11:50:00 AM","instructors":["Valiant, G."],"location":"Hewlett Teaching Center 102"}],"id":15553}],[],[]],"primary_type":"Lecture"},
"273A":{"department":"CS","number":"273A","title":"A Computational Tour of the Human Genome (BIOMEDIN 273A, DBIO 273A)","description":"Introduction to computational biology through an informatic exploration of the human genome. Topics include: genome sequencing (technologies, assembly, personalized sequencing); functional landscape (genes, gene regulation, repeats, RNA genes, epigenetics); genome evolution (comparative genomics, ultraconservation, co-option). Additional topics may include population genetics, personalized genomics, and ancient DNA. Course includes primers on molecular biology, the UCSC Genome Browser, and text processing languages. Guest lectures from genomic researchers. No prerequisites. See http://cs273a.stanford.edu/.","min_units":3,"max_units":3,"gers":[],"id":207196,"primary":[[{"primary-instructors":[],"secondary-instructors":["Batzoglou, S."],"meeting-times":[{"days":[true,false,true,false,false],"start":"1:30:00 PM","end":"2:50:00 PM","instructors":["Bejerano, G.","Batzoglou, S."],"location":"Herrin T195"}],"id":17630}],[],[]],"primary_type":"Lecture"},
"274":{"department":"CS","number":"274","title":"Representations and Algorithms for Computational Molecular Biology (BIOE 214, BIOMEDIN 214, GENE 214)","description":"Topics: introduction to bioinformatics and computational biology, algorithms for alignment of biological sequences and structures, computing with strings, phylogenetic tree construction, hidden Markov models, Gibbs Sampling, basic structural computations on proteins, protein structure prediction, protein threading techniques, homology modeling, molecular dynamics and energy minimization, statistical analysis of 3D biological data, integration of data sources, knowledge representation and controlled terminologies for molecular biology, microarray analysis, machine learning (clustering and classification), and natural language text processing. Prerequisites: programming skills; consent of instructor for 3 units.","min_units":3,"max_units":4,"gers":[],"id":141030,"primary":[[{"primary-instructors":[],"secondary-instructors":["Altman, R."],"meeting-times":[{"days":[false,true,false,true,false],"start":"4:30:00 PM","end":"5:50:00 PM","instructors":["Altman, R."],"location":"Gates B1"}],"id":17686}],[],[]],"primary_type":"Lecture"},
"279":{"department":"CS","number":"279","title":"Computational Biology: Structure and Organization of Biomolecules and Cells (BIOMEDIN 279, BIOPHYS 279, CME 279)","description":"Computational approaches to understanding the three-dimensional spatial organization of biological systems and how that organization evolves over time. The course will cover cutting-edge research in both physics-based simulations and computational analysis of experimental data, at scales ranging from individual molecules to multiple cells. Prerequisites: elementary programming background (106A or equivalent) and an introductory course in biology or biochemistry.","min_units":3,"max_units":3,"gers":[],"id":215942,"primary":[[{"primary-instructors":[],"secondary-instructors":["Dror, R."],"meeting-times":[{"days":[false,true,false,true,false],"start":"3:00:00 PM","end":"4:20:00 PM","instructors":["Dror, R."],"location":"200-203"}],"id":15816}],[],[]],"primary_type":"Lecture"},
"300":{"department":"CS","number":"300","title":"Departmental Lecture Series","description":"Priority given to first-year Computer Science Ph.D. students. CS Masters students admitted if space is available.  Presentations by members of the department faculty, each describing informally his or her current research interests and views of computer science as a whole.","min_units":1,"max_units":1,"gers":[],"id":105811,"primary":[[{"primary-instructors":[],"secondary-instructors":["Dill, D."],"meeting-times":[{"days":[true,false,true,false,false],"start":"4:30:00 PM","end":"5:50:00 PM","instructors":["Dill, D."],"location":"Hewlett Teaching Center 102"}],"id":15919}],[],[]],"primary_type":"Seminar"},
"309A":{"department":"CS","number":"309A","title":"Cloud Computing","description":"For science, engineering, business, medicine, and law students. Cloud computing is bringing information systems out of the back office and making it core to the entire economy. This class is intended for all students who want to begin to understand the implications of this shift in technology. Guest industry experts are public company CEOs who are delivering application, software development, operations management, compute, storage & data center, and network cloud services.","min_units":1,"max_units":1,"gers":[],"id":205720,"primary":[[{"primary-instructors":[],"secondary-instructors":["Chou, T."],"meeting-times":[{"days":[false,true,false,false,false],"start":"4:30:00 PM","end":"5:50:00 PM","instructors":["Chou, T."],"location":""}],"id":16581}],[],[]],"primary_type":"Seminar"},
"315B":{"department":"CS","number":"315B","title":"Parallel Computing Research Project","description":"Advanced topics and new paradigms in parallel computing including parallel algorithms, programming languages, runtime environments, library debugging/tuning tools, and scalable architectures. Research project. Prerequisite: consent of instructor.","min_units":3,"max_units":3,"gers":[],"id":105818,"primary":[[{"primary-instructors":[],"secondary-instructors":["Olukotun, O."],"meeting-times":[{"days":[true,false,true,false,false],"start":"1:30:00 PM","end":"2:50:00 PM","instructors":["Olukotun, O."],"location":"School of Education 208"}],"id":27715}],[],[]],"primary_type":"Lecture"},
"348A":{"department":"CS","number":"348A","title":"Computer Graphics: Geometric Modeling","description":"The mathematical tools needed for the geometrical aspects of computer graphics and especially for modeling smooth shapes. Fundamentals: homogeneous coordinates, transformations, and perspective. Theory of parametric and implicit curve and surface models: polar forms, B&eacute;zier arcs and de Casteljau subdivision, continuity constraints, B-splines, tensor product, and triangular patch surfaces. Subdivision surfaces and multi-resolution representations of geometry. Representations of solids and conversions among them. Surface reconstruction from scattered data points. Geometry processing on meshes, including simplification and parameterization. Prerequisite: linear algebra. Recommended: 248.","min_units":3,"max_units":4,"gers":[],"id":105864,"primary":[[{"primary-instructors":[],"secondary-instructors":["Guibas, L."],"meeting-times":[{"days":[true,false,true,false,false],"start":"3:00:00 PM","end":"4:20:00 PM","instructors":["Guibas, L."],"location":"Clark Center S361"}],"id":27716}],[],[]],"primary_type":"Lecture"},
"357":{"department":"CS","number":"357","title":"Advanced Topics in Formal Methods","description":"Topics vary annually.  Recent offerings have covered the foundations of static analysis, including decision procedures for important theories (SAT, linear integer constraints, SMT solvers), model checking, abstract interpretation, and constraint-based analysis. May be repeated for credit. Prerequisite: 256.","min_units":3,"max_units":3,"gers":[],"id":105877,"primary":[[{"primary-instructors":[],"secondary-instructors":["Aiken, A."],"meeting-times":[{"days":[true,false,true,false,false],"start":"1:30:00 PM","end":"2:50:00 PM","instructors":["Aiken, A.","Dill, D."],"location":"Encina West 101"}],"id":27717}],[],[]],"primary_type":"Lecture"},
"367":{"department":"CS","number":"367","title":"Algebraic Graph Algorithms","description":"Due to the surprisingly fast algorithms for the problem, matrix multiplication is routinely used as a basic building block for algorithms beating the brute-force approach. This course explores matrix multiplication algorithms and a variety of problems, mostly within graph algorithms, that can be solved faster using a fast matrix multiplication algorithm. Topics include: Fast Matrix Multiplication, algebraic algorithms for Graph Transitive Closure, All Pairs Shortest Paths and variants of the problem, Perfect Matching and Minimum Cycle, and a variety of equivalences between problems involving matrix multiplication.  Prerequisites: CS154, CS161, or the equivalent mathematical maturity.","min_units":3,"max_units":3,"gers":[],"id":214936,"primary":[[{"primary-instructors":[],"secondary-instructors":["Williams, V."],"meeting-times":[{"days":[false,false,false,false,true],"start":"12:30:00 PM","end":"3:20:00 PM","instructors":["Williams, V."],"location":"460-334"}],"id":28597}],[],[]],"primary_type":"Lecture"},
"44N":{"department":"CS","number":"44N","title":"Computational Thinking and Systems in the Real-World","description":"Computing in the real-world is too often viewed as working away concocting some computer incantations hidden inside some high technology company.  However, computing and computer communication has infiltrated and in many cases revolutionized several &iquest;systems&iquest; in the real world, including financial systems, inventory management, advertising systems, supply chain management, transportation systems, defense systems and so on.  Moreover, the discipline of thinking that has developed to build these systems, computational thinking, has powerful applicability to real-world problems and situations outside of computer programming.  This course provides an introduction and exposure to some of these dramatic trends, opportunities and risks.  Also included is an introduction to some basic ideas in &iquest;computational thinking&iquest;.  The course will include guest speakers.  No programming competence is assumed but exposure to programming would be useful.  Interest in the real world and interest is not being run-over by this trend is essential.","min_units":3,"max_units":3,"gers":[],"id":217227,"primary":[[{"primary-instructors":[],"secondary-instructors":["Cheriton, D."],"meeting-times":[{"days":[false,true,false,true,false],"start":"8:00:00 PM","end":"9:15:00 PM","instructors":["Cheriton, D."],"location":"300-303"}],"id":28861}],[],[]],"primary_type":"Introsem"},
"45N":{"department":"CS","number":"45N","title":"Computers and Photography: From Capture to Sharing","description":"Preference to freshmen with experience in photography and use of computers. Elements of photography, such as lighting, focus, depth of field, aperture, and composition. How a photographer makes photos available for computer viewing, reliably stores them, organizes them, tags them, searches them, and distributes them online. No programming experience required. Digital SLRs and editing software will be provided to those students who do not wish to use their own.","min_units":3,"max_units":4,"gers":["WAY-CE"],"id":208798,"primary":[[{"primary-instructors":[],"secondary-instructors":["Garcia-Molina, H."],"meeting-times":[{"days":[true,false,true,false,false],"start":"1:30:00 PM","end":"3:20:00 PM","instructors":["Garcia-Molina, H."],"location":"Littlefield 103"}],"id":16027}],[],[]],"primary_type":"Introsem"},
"46N":{"department":"CS","number":"46N","title":"Big Data, Big Discoveries, Big Fallacies","description":"A sea change has occurred in science, technology, medicine, politics, and society as a whole: many of the world's biggest discoveries and decisions are now being made on the basis of analyzing massive data sets, referred to as \"big data\". Everyday examples include social-network friend recommendations, and weather predictions far more accurate than a decade ago; both use vast collections of data to model the past and predict the future. But it is surprisingly easy to come to false conclusions from data analysis alone. For example, we might conclude that acne medicine prevents heart attacks and strokes, if we forget to factor in the age of the patients. Privacy is a major concern: Target stores analyzed buying patterns to predict with remarkable accuracy which of their shoppers had just become pregnant, but trouble arose when they sent baby ads to the homes of pregnant teens whose parents weren't yet in the know. We will start by surveying the history of data-driven activities, leading up to the recent Big Data explosion. A variety of data analysis techniques will be covered, leading students to appreciate that even simple techniques can go a long way when the data set is large enough. Common stumbling blocks leading to false conclusions will be discussed, and students will be asked to debate the many issues surrounding privacy. In one project, students will see whose analysis techniques can best predict user movie ratings based on past rating behavior. A second project will be individually designed in an area of the student's choosing. The seminar will include a mix of assigned readings, small-scale investigations and assignments, classroom discussions, and two projects. No computer programming or special math skills are required; students will learn the basic techniques and tools they need to complete the data analysis assignments and projects.","min_units":3,"max_units":3,"gers":[],"id":216780,"primary":[[{"primary-instructors":[],"secondary-instructors":["Widom, J."],"meeting-times":[{"days":[false,true,false,true,false],"start":"10:30:00 AM","end":"11:50:00 AM","instructors":["Widom, J."],"location":"160-317"}],"id":17741}],[],[]],"primary_type":"Introsem"},
"54N":{"department":"CS","number":"54N","title":"Great Ideas in Computer Science","description":"Stanford Introductory Seminar. Preference to freshmen. Covers the intellectual tradition of computer science emphasizing ideas that reflect the most important milestones in the history of the discipline.  No prior experience with programming is assumed.  Topics include programming and problem solving; implementing computation in hardware; algorithmic efficiency; the theoretical limits of computation; cryptography and security; and the philosophy behind artificial intelligence.","min_units":3,"max_units":3,"gers":["GER:DB-EngrAppSci"],"id":205643,"primary":[[{"primary-instructors":[],"secondary-instructors":["Roberts, E."],"meeting-times":[{"days":[true,false,true,false,false],"start":"7:00:00 PM","end":"8:15:00 PM","instructors":["Roberts, E."],"location":"300-303"}],"id":16011}],[],[]],"primary_type":"Introsem"},
"90SI":{"department":"CS","number":"90SI","title":"CS + Social Good: Using Web Technologies to Change the World","description":"Learn web technologies by working on real world projects focused on creating positive social impact. The class will cover basic topics related to web development and provide resources for more advanced learning. Students will work on small teams to implement high-impact projects for partner organizations. The aim of the class is to empower students to leverage technology for social good by inspiring action, facilitating collaboration, and forging pathways toward change. No web application experience required. Prerequisite: 106B. Application required; apply online at http://bit.ly/90siApp. Applications accepted until midnight on September 18th.","min_units":2,"max_units":2,"gers":[],"id":214907,"primary":[[{"primary-instructors":[],"secondary-instructors":["Cain, J."],"meeting-times":[{"days":[true,false,true,false,true],"start":"1:30:00 PM","end":"2:20:00 PM","instructors":["Cain, J."],"location":""}],"id":28596}],[],[]],"primary_type":"Activity"},
"92SI":{"department":"CS","number":"92SI","title":"Hap.py Coder: The Python Programming Language","description":"The fundamentals and contemporary usage of the Python programming language. Primary focus on developing best practices in writing Python and exploring the extensible and unique parts of Python that make it such a powerful scripting language. Topics include: data structures (e.g. lists and dictionaries), and characteristic pythonic conventions like anonymous functions, iterables, and powerful built-ins (e.g. map, filter, zip). Time permitting, we will also cover object-oriented design, modules, (e.g. request, itertools), and modern Python-based web frameworks. Prerequisite: 106A. Application required.","min_units":2,"max_units":2,"gers":[],"id":217266,"primary":[[{"primary-instructors":[],"secondary-instructors":["Parlante, N."],"meeting-times":[{"days":[false,true,false,true,false],"start":"1:30:00 PM","end":"2:50:00 PM","instructors":["Parlante, N."],"location":"160-322"}],"id":29051}],[],[]],"primary_type":"Activity"}}